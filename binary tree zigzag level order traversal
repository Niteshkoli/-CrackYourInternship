/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        vector<int> add;
        stack<TreeNode *> currlevel;
        stack<TreeNode *> nextlevel;
      
        if(root==NULL) return res;
      
        currlevel.push(root);
        while(!currlevel.empty() || !nextlevel.empty()){
            while(!currlevel.empty()){
                TreeNode *temp = currlevel.top();
                currlevel.pop();
                
                add.push_back(temp->val);
                
                if(temp->left)
                    nextlevel.push(temp->left);
                if(temp->right)
                    nextlevel.push(temp->right);
                if(currlevel.empty()){
                    res.push_back(add);
                    add.clear();
                }
            }
             while(!nextlevel.empty()){
                TreeNode *temp = nextlevel.top();
                nextlevel.pop();
                
                add.push_back(temp->val);
                
                if(temp->right)
                    currlevel.push(temp->right);
                if(temp->left)
                    currlevel.push(temp->left);
                if(nextlevel.empty()){
                    res.push_back(add);
                    add.clear();
                }
            }    
    }
        return res;
    }
};
